buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.26.1'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

apply plugin: 'jacoco'
apply from: rootProject.file('quality/quality.gradle')
apply from: rootProject.file('app/jacoco.gradle')

jacoco {
    toolVersion = "${rootProject.jacocoVersion}"
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
}

android {
    compileSdkVersion 27
    flavorDimensions "default"

    defaultConfig {
        applicationId "com.example.rwothoromo.developers"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'
        multiDexEnabled true
    }

    signingConfigs {
        release {
            storeFile file(System.getenv("KEYSTORE") ?: "../keystores/keystore.jks")
            storePassword System.getenv("KEYSTORE_PASSWORD")
            keyAlias System.getenv("KEY_ALIAS")
            keyPassword System.getenv("KEY_PASSWORD")
        }
    }

    lintOptions {
        abortOnError false
    }

    buildTypes {
        debug {
            testCoverageEnabled = true
        }
        release {
            testCoverageEnabled true
            minifyEnabled false
            zipAlignEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        mock {
            applicationIdSuffix = ".mock"
            dimension "default"
        }
        prod {

        }
    }

    sourceSets {
        mock {
            java.srcDirs('src/mock/java')
        }
        prod {
            java.srcDirs('src/prod/java')
        }
    }

    testOptions {
        execution 'ANDROID_TEST_ORCHESTRATOR'
        animationsDisabled true
        unitTests.returnDefaultValues = true

        unitTests {
            includeAndroidResources = true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:appcompat-v7:${rootProject.supportVersion}"
    implementation "com.android.support.constraint:constraint-layout:${rootProject.constraintLayout}"
    implementation "com.android.support:design:${rootProject.supportVersion}"
    implementation "com.android.support:support-v4:${rootProject.supportVersion}"
    implementation "com.android.support:recyclerview-v7:${rootProject.supportVersion}"
    implementation "com.android.support:cardview-v7:${rootProject.supportVersion}"
    testImplementation "junit:junit:${rootProject.jUnit}"
    androidTestImplementation "com.android.support.test:runner:${rootProject.testRunner}"
    androidTestImplementation "com.android.support.test:rules:${rootProject.testRunner}"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:${rootProject.espressoVersion}"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:${rootProject.espressoVersion}"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:${rootProject.espressoVersion}"
    androidTestImplementation "com.android.support.test.espresso:espresso-idling-resource:${rootProject.espressoVersion}"
    implementation "com.squareup.retrofit2:retrofit:${rootProject.retrofitVersion}"
    implementation "com.google.code.gson:gson:${rootProject.gsonVersion}"
    implementation "com.squareup.retrofit2:converter-gson:${rootProject.retrofitVersion}"
    implementation "com.github.bumptech.glide:glide:${rootProject.glideVersion}"
    implementation "com.android.support.test.espresso.idling:idling-concurrent:${rootProject.espressoVersion}"
    implementation "com.squareup.okhttp3:mockwebserver:${rootProject.mockWebServer}"
    implementation "org.mockito:mockito-core:${rootProject.mockitoVersion}"
    implementation "com.crashlytics.sdk.android:crashlytics:${rootProject.crashlyticsVersion}"
    implementation "com.crashlytics.sdk.android:answers:${rootProject.crashlyticsAnswersVersion}"
    implementation "com.google.firebase:firebase-core:${rootProject.firebaseCore}"
    implementation "com.google.firebase:firebase-perf:${rootProject.firebasePerf}"
}

apply plugin: 'com.google.gms.google-services'